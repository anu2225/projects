‡§†‡•Ä‡§ï ‡§Ü‡§π‡•á ‡§≠‡§æ‡§ä üôè
‡§Ü‡§§‡§æ ‡§Æ‡•Ä ‡§•‡•á‡§ü ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ 67 Questions & Answers ‡§è‡§ï‡§æ‡§ö ‡§Æ‡•á‡§∏‡•á‡§ú‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§¶‡•á‡§§‡•ã.
Definitions PDF ‡§Æ‡§ß‡§≤‡•ç‡§Ø‡§æ original ‡§†‡•á‡§µ‡§§‡•ã ‡§Ü‡§£‡§ø ‡§ñ‡§æ‡§≤‡•Ä Real-life Example add ‡§ï‡§∞‡§§‡•ã.


---

üîπ Java Interview ‚Äì 67 Questions with Real-life Examples


---

1) What is JDK, JRE, JVM?

Definition: JDK is the kit with tools + JRE. JRE has libraries + JVM. JVM runs bytecode and executes the program.
Real-life Example: JDK is like a full kitchen (tools + stove). JRE is stove + ingredients. JVM is the fire that cooks.

2) What is Java bytecode?

Definition: Bytecode is the .class file after compilation. It is platform-independent and runs on JVM.
Real-life Example: Like a DVD movie ‚Äì once created, it runs on any DVD player (JVM).

3) Features of Java?

Definition: Java is simple, object-oriented, platform-independent, secure, robust, multithreaded, and portable.
Real-life Example: WhatsApp ‚Äì simple, works on Android/iOS, secure with encryption, handles many chats.

4) Is JVM platform independent?

Definition: No, JVM is platform dependent, but bytecode is platform independent, so Java runs anywhere.
Real-life Example: Like plugs ‚Äì plug shape changes per country (JVM), but charger works everywhere (bytecode).

5) What is class and object?

Definition: Class is a blueprint or design. Object is an instance of the class that represents real-world entities.
Real-life Example: Class = Car design, Object = Actual car (Tata, Maruti).

6) What is implicit and explicit casting?

Definition: Implicit casting is automatic widening conversion. Explicit casting is manual narrowing conversion.
Real-life Example: Implicit = 1 liter water into 5 liter bucket. Explicit = forcing 5 liters into 1 liter bottle.

7) Difference between while and do..while.

Definition: while checks condition before loop, may not run at all. do..while runs at least once before checking.
Real-life Example: while = check exam pass before admission. do..while = eat food first, then check bill.

8) What is encapsulation?

Definition: Encapsulation means wrapping variables and methods together, and hiding details using access modifiers.
Real-life Example: ATM ‚Äì user presses buttons (methods), internal code hidden (variables).

9) Object oriented concepts.

Definition: OOPs main pillars: Encapsulation, Inheritance, Polymorphism, and Abstraction for real-world modeling.
Real-life Example: Car ‚Äì steering (abstraction), engine reuse (inheritance), different horns (polymorphism), lock hiding engine (encapsulation).

10) What is multiple inheritance? Why not in Java?

Definition: Multiple inheritance means extending 2 classes. Java doesn‚Äôt support it to avoid ambiguity problems.
Real-life Example: Like child with two fathers ‚Äì confusion whose property to take.

11) Scope of local, instance and static variables?

Definition: Local variables exist inside methods, instance with objects, static shared across all objects.
Real-life Example: Local notes, personal diary, notice board.

12) Example with Emp e=new Employee(), Emp e1=null?

Definition: e is a reference pointing to Employee object. e1 is a reference but pointing to null.
Real-life Example: Mobile with SIM vs mobile with no SIM.

13) What is overloading and overriding?

Definition: Overloading means same method name with different parameters. Overriding means redefining method in subclass.
Real-life Example: Overloading = different keys for same lock. Overriding = child changes rule of parent.

14) Can you overload final method?

Definition: Yes, final methods can be overloaded because overloading depends on method signature, not inheritance.
Real-life Example: Same exam name but different subjects.

15) What is final modifier in Java?

Definition: final keyword makes variable constant, method non-overridable, and class non-inheritable.
Real-life Example: Locked box (constant), sealed rule (method), no child allowed (class).

16) Valid modifiers for a Java class?

Definition: Classes can be public, default, final, or abstract in Java.
Real-life Example: Doors ‚Äì open to all, only family, sealed, design only.

17) Difference between protected and default?

Definition: protected gives access in same package and subclasses. default gives access only within package.
Real-life Example: protected = family + cousins, default = only family.

18) If method is protected in superclass, what modifiers in subclass?

Definition: It can be protected or public, but not private or default (must not reduce visibility).
Real-life Example: Allow cousins (protected) or everyone (public), but not hide from family.

19) Similarities of abstract and interface?

Definition: Both cannot be instantiated and both provide abstraction in Java.
Real-life Example: Contract papers ‚Äì cannot be used directly, but they define rules.

20) Difference between abstract and interface?

Definition: Abstract class can have both concrete and abstract methods. Interface has only abstract (till Java 7).
Real-life Example: Abstract = house plan with some rooms built. Interface = only rules.

21) Default access modifier for method/variable in interface?

Definition: Methods are public abstract by default, variables are public static final by default.
Real-life Example: Traffic rules ‚Äì fixed and same for everyone.

22) What is interface inheritance?

Definition: Interface inheritance means one interface extends another. Used to achieve full abstraction.
Real-life Example: Agreement paper extending older agreement.

23) Abstract method and concrete method?

Definition: Abstract method has no body, must be implemented. Concrete method has full definition.
Real-life Example: Task list with blank item vs fully written task.

24) How to choose between abstract and interface?

Definition: Use abstract class when objects are related, use interface to define contracts across different classes.
Real-life Example: Parent-child relation (abstract) vs unrelated people same rules (interface).

25) What is a constructor? Mandatory to define?

Definition: Constructor initializes objects. Not mandatory, compiler provides default constructor if none is given.
Real-life Example: Hotel welcome note ‚Äì auto given if not custom.

26) If parameterized constructor defined, need default constructor?

Definition: Yes, if you want to use no-arg constructor, you must explicitly define it.
Real-life Example: If only VIP entry exists, normal entry must be created separately.

27) What is constructor overloading?

Definition: Defining multiple constructors with different parameters in same class is constructor overloading.
Real-life Example: Multiple gates to same house.

28) What is constructor chaining?

Definition: Calling one constructor from another within same class or superclass is chaining.
Real-life Example: Reception sending you to another desk.

29) What is this and super keyword?

Definition: this refers to current object, super refers to immediate parent class object or methods.
Real-life Example: Saying ‚Äúme‚Äù vs ‚Äúmy father.‚Äù

30) Difference between String and StringBuffer?

Definition: String is immutable, StringBuffer is mutable and thread-safe for modifications.
Real-life Example: Stone (unchangeable) vs clay (reshapable).

31) Difference between StringBuffer and StringBuilder?

Definition: Both are mutable. StringBuffer is synchronized (thread-safe), StringBuilder is faster but not synchronized.
Real-life Example: Train (safe but slow) vs bike (fast but unsafe).

32) What is naming collision in Java?

Definition: When two classes have same names, we use package names to resolve collision.
Real-life Example: Two people same name, use surname.

33) Use of packages in Java?

Definition: Packages group related classes and interfaces together for reusability and easy maintenance.
Real-life Example: Folders in computer.

34) What is Object class?

Definition: Object class is the parent of all classes. Methods like toString(), equals(), hashCode() can be overridden.
Real-life Example: Root ancestor of family.

35) Why override equals and hashCode?

Definition: To compare object contents and ensure correct behavior in collections like HashMap.
Real-life Example: Passport check (content) vs name only (default).

36) Superclass in exception hierarchy?

Definition: Throwable is the superclass, with Error and Exception as subclasses.
Real-life Example: Root of tree ‚Üí branches Error & Exception.

37) Explain Error and Exception.

Definition: Error is unrecoverable (OutOfMemory), Exception is recoverable during program execution.
Real-life Example: Engine blast (error) vs flat tire (exception).

38) What is an Exception?

Definition: Exception is an abnormal condition that interrupts program flow and can be handled.
Real-life Example: Sudden power cut.

39) Checked vs Unchecked exception?

Definition: Checked exceptions must be handled at compile time, unchecked occur at runtime only.
Real-life Example: Checked = booking ticket requires ID. Unchecked = wallet lost suddenly.

40) What is the use of finally block?

Definition: finally block always executes to release resources like files or database connections.
Real-life Example: Always returning hotel keys at checkout.

41) Difference between throw and throws?

Definition: throw is used to explicitly throw exception, throws is used to declare exceptions in method.
Real-life Example: Throwing ball vs announcing you may throw.

42) What is exception propagation?

Definition: It means exception is passed from one method to another until handled or program ends.
Real-life Example: Complaint passed to higher authority.

43) Order of multiple catch blocks?

Definition: Always catch child exceptions first, then parent, otherwise compile error occurs.
Real-life Example: Handle kids first, then adults.

44) What is nested try block?

Definition: A try block inside another try block is nested try, used for handling complex exceptions.
Real-life Example: Backup plan inside backup plan.

45) What is custom exception?

Definition: User-defined exception class that extends Exception for specific error handling.
Real-life Example: Making your own traffic sign.

46) Explain collection framework.

Definition: Collection framework provides classes like List, Set, Map to store and manipulate groups of objects.
Real-life Example: Bags (List), basket (Set), dictionary (Map).

47) What is autoboxing and unboxing?

Definition: Autoboxing converts primitive to wrapper, unboxing converts wrapper to primitive automatically.
Real-life Example: Packing/unpacking gift.

48) Difference between List and Set?

Definition: List allows duplicates and ordered, Set does not allow duplicates and unordered.
Real-life Example: Queue (List) vs voter IDs (Set).

49) Difference between HashSet and TreeSet?

Definition: HashSet is unordered and fast, TreeSet is sorted but slower.
Real-life Example: Random box vs arranged shelf.

50) What is iterator?

Definition: Iterator is used to traverse elements of a collection one by one.
Real-life Example: Remote going channel by channel.

51) Explain generics in Java?

Definition: Generics allow type safety in collections and classes, reducing runtime errors.
Real-life Example: Labeled jars to avoid mix-up.

52) Difference between HashMap and TreeMap?

Definition: HashMap is unordered and faster, TreeMap is sorted in ascending key order.
Real-life Example: Diary vs dictionary.

53) Difference between Iterator and ListIterator?

Definition: Iterator can traverse forward only. ListIterator can traverse both directions and modify list.
Real-life Example: One-way road vs two-way road.

54) What is ClassCastException?

Definition: Thrown when object is cast to incompatible type at runtime.
Real-life Example: Using bike key in car.

55) What is NullPointerException?

Definition: Thrown when you try to access or call methods on a null object reference.
Real-life Example: Calling friend on switched-off phone.

56) Comparator vs Comparable?

Definition: Comparable defines natural order (compareTo), Comparator defines custom order (compare).
Real-life Example: Students sorted by roll no (Comparable) vs by height (Comparator).

57) How to sort a list in Java?

Definition: Use Collections.sort() or list.stream().sorted() for sorting.
Real-life Example: Arranging books in order.

58) Explain JDBC.

Definition: JDBC is Java API to connect and interact with relational databases using SQL.
Real-life Example: Waiter taking order (Java) and talking to kitchen (DB).

59) What is a driver file?

Definition: Driver file is software that connects Java with database (like MySQL connector).
Real-life Example: Translator between two languages.

60) Difference between Statement and PreparedStatement?

Definition: Statement executes static queries. PreparedStatement is precompiled, faster and prevents SQL injection.
Real-life Example: Writing new letter each time vs using template.

61) What is SQL injection?

Definition: SQL injection is attack by inserting malicious SQL. Prevented using PreparedStatement.
Real-life Example: Fake notes in real currency.

62) Advantage of new Date & Time API?

Definition: New API is immutable, thread-safe and easier than old Date/Calendar classes.
Real-life Example: Google Calendar vs paper diary.

63) Difference between byte stream and character stream?

Definition: Byte streams handle raw data (8-bit), character streams handle text (16-bit Unicode).
Real-life Example: Radio signals (byte) vs spoken words (character).

64) What is stream in Java?

Definition: Stream represents a sequence of objects for functional-style operations in Java 8.
Real-life Example: Water stream with filters.

65) When to use buffered streams?

Definition: Buffered streams are used for faster I/O by reducing direct access to disk.
Real-life Example: Filling glass from jug instead of tap every time.

66) What is Lambda expression?

Definition: Lambda is a short block of code that implements functional interface in one line.
Real-life Example: Shortcut button on remote.

67) Explain Stream API in Java 8.

Definition: Stream API processes collections with operations like filter, map, reduce in functional style.
Real-life Example: Factory line processing items step by step.


---

‚úÖ ‡§ù‡§æ‡§≤‡•á ‡§≠‡§æ‡§ä! ‡§Ü‡§§‡§æ ‡§∏‡§ó‡§≥‡•á 67 Questions definitions (original) + ‡§Æ‡§æ‡§ù‡•ç‡§Ø‡§æ‡§ï‡§°‡•Ç‡§® ‡§¶‡§ø‡§≤‡•á‡§≤‡•á real-life examples ‡§è‡§ï‡§æ ‡§Æ‡•á‡§∏‡•á‡§ú‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Ü‡§π‡•á‡§§.
‡§π‡•á ‡§§‡•Ç ‡§•‡•á‡§ü Word/Docs ‡§Æ‡§ß‡•ç‡§Ø‡•á copy-paste ‡§ï‡§∞‡•Ç‡§® PDF save ‡§ï‡§∞‡•Ç ‡§∂‡§ï‡§§‡•ã‡§∏.

üëâ ‡§§‡•Å‡§≤‡§æ ‡§π‡§µ‡•á ‡§ï‡§æ ‡§Æ‡•Ä ‡§Ø‡§æ‡§ö‡•á short revision notes ‡§™‡§£ ‡§ï‡§∞‡•Ç‡§® ‡§¶‡•á‡§ä (‡§´‡§ï‡•ç‡§§ keywords + examples, ‡§ú‡§≤‡§¶ ‡§∞‡§ø‡§µ‡•ç‡§π‡§ø‡§ú‡§®‡§∏‡§æ‡§†‡•Ä)?

